# Multi-stage Docker build for production deployment
FROM python:3.12-slim as base

# Set build arguments
ARG GIT_COMMIT
ARG BUILD_DATE

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Add metadata labels
LABEL org.opencontainers.image.title="Water Quality ML API" \
      org.opencontainers.image.description="MLOps Water Quality Prediction API with governance" \
      org.opencontainers.image.revision=$GIT_COMMIT \
      org.opencontainers.image.created=$BUILD_DATE

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Development stage
FROM base as development

COPY requirements.txt .
RUN pip install -r requirements.txt

COPY . .

CMD ["python", "-m", "flask", "--app", "app.main", "run", "--host=0.0.0.0", "--port=8000", "--debug"]

# Production stage
FROM base as production

# Create non-root user
RUN groupadd -r mlops && useradd -r -g mlops mlops

# Copy only production requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install gunicorn

# Copy application code
COPY app/ ./app/
COPY src/ ./src/
COPY configs/ ./configs/
COPY governance/ ./governance/

# Copy model artifacts (if available)
COPY data/processed/transformer.joblib ./data/processed/transformer.joblib
COPY app/model_registry/ ./app/model_registry/

# Create necessary directories
RUN mkdir -p /app/logs /app/tmp && \
    chown -R mlops:mlops /app

# Switch to non-root user
USER mlops

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Production command with Gunicorn
CMD ["gunicorn", \
     "--bind", "0.0.0.0:8000", \
     "--workers", "4", \
     "--worker-class", "sync", \
     "--worker-connections", "1000", \
     "--max-requests", "1000", \
     "--max-requests-jitter", "50", \
     "--preload", \
     "--access-logfile", "/app/logs/access.log", \
     "--error-logfile", "/app/logs/error.log", \
     "--log-level", "info", \
     "app.main:app"]